  <%= link_to_add_association fPurchaseProduct, 
    :order_prod_lot_stocks, 
    class: 'btn btn-primary btn-sm btn-add-lote-association',
    partial: "purchases/partials/purchase_prod_lot_stock_fields", 
    data: {
      "association-insertion-node" => (fPurchaseProduct.object.product.present? ? "tbody#lot-stock-cocoon-container-"+fPurchaseProduct.object.product.id.to_s : "tbody#lot-stock-cocoon-container"),
      "association-insertion-method" => "prepend"} do %>
    <%= fa_icon "plus" %>
    Agregar lote
  <% end %>

  <table class="table table-hover table-sm mb-0">
    <thead>
      <tr>
        <th>Presentación</th>
        <th>Cantidad</th>
        <th>Código</th>
        <th>Laboratorio</th>
        <th>Vencimiento</th>
        <th></th>
      </tr>
    </thead>
    <tbody class="lot-stock-cocoon-container" id="<%= (fPurchaseProduct.object.product.present? ? "lot-stock-cocoon-container-"+fPurchaseProduct.object.product.id.to_s : "lot-stock-cocoon-container") %>">
      <%= fPurchaseProduct.simple_fields_for :order_prod_lot_stocks, fPurchaseProduct.object.order_prod_lot_stocks.sort_by{|obj| obj.position.to_s }.reverse do |form_lot| %>
        <%= render "purchases/partials/purchase_prod_lot_stock_fields", f: form_lot %>
      <% end %>
    </tbody>    
  </table>
  

  <%# Si no se asigno algun producto, entonces debemos mostrar mensaje "presence" %>  
  <% if fPurchaseProduct.object.errors[:outpatient_prescription_products].any? && fPurchaseProduct.object.outpatient_prescription_products.count == 0 && !fPurchaseProduct.object.outpatient_prescription_products.first.errors[:product_id].any? %>
    <div class="invalid-feedback d-block">
      <%= fPurchaseProduct.object.errors[:outpatient_prescription_products].first %>
    </div>
  <% end %>
