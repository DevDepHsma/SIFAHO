<tr class="nested-fields">
  <!-- Código del producto -->
  <td>
    <% @ocpp_id = defined?(ocpp_id) ? ocpp_id : f.object.original_chronic_prescription_product_id %>
    <%= f.hidden_field :original_chronic_prescription_product_id, value: "#{ @ocpp_id }" %>
    <% unless f.object.product.present?; @original_product = OriginalChronicPrescriptionProduct.find(@ocpp_id); end %>
    <div class="custom-input-group">
      <div class="form-group fake optional products_product_id_fake">
        <input type="text" 
        name="<%="product_code_fake-#{f.object.id}"%>" 
        value="<%= f.object.product.present? ? f.object.product.code : @original_product.product.code %>"
        class="form-control fake optional product-code input-sm <%= ("is-invalid" if f.object.errors[:product_id].any? ) %> <%= ("is-valid" if f.object.product_id.present? && !f.object.errors[:product_id].any? ) %>" 
        data-autocomplete-source="<%= search_by_code_products_path %>"
        size="6" 
        autocomplete="off" 
        placeholder="Código">
        <div id="product_id_fake" class="invalid-feedback">
          Producto <%= f.object.errors[:product_id].first %>
        </div>
      </div>

      <div class="with-loading">
        <%= fa_icon 'spinner', class: "fa-spin"%>
      </div>
    </div>
    <%# Hidden product_id %>
    <%= f.input :product_id, :as => :hidden, :error => false, :input_html =>  { 
      class: "product-id", 
      value: f.object.product_id.present? ? f.object.product_id : @original_product.product.id } %>

    <% if f.object.errors[:uniqueness_product_in_the_order].any? %>
      <div class="invalid-feedback d-block">
        <%= f.object.errors[:uniqueness_product_in_the_order].first %>
      </div>
    <% end %>
  </td>

  <!-- Nombre de Producto -->
  <td>
    <div class="custom-input-group">
      <div class="form-group fake optional products_product_id_fake">
        <input type="text" 
        name="<%="product_name_fake-#{f.object.id}"%>"
        value="<%= f.object.product.present? ? f.object.product.name : @original_product.product.name %>"
        class="form-control fake optional product-name input-sm <%= ("is-invalid" if f.object.errors[:product_id].any? ) %> <%= ("is-valid" if f.object.product_id.present? && !f.object.errors[:product_id].any? ) %>" 
        data-autocomplete-source="<%= search_by_name_products_path %>"
        size="45" 
        autocomplete="off" 
        placeholder="Nombre">
        <div id="product_id_fake" class="invalid-feedback">
          Producto <%= f.object.errors[:product_id].first %>
        </div>
      </div>

      <div class="with-loading">
        <%= fa_icon 'spinner', class: "fa-spin"%>
      </div>
    </div>
  </td>

  <!-- Unidad -->
  <td>
    <%= f.input :supply_unity_fake, label: false, disabled: true, required: false, 
      input_html: {
        class: 'product-unity input-sm',
        size: 10,
        placeholder: "Unidad",
        value: @original_product.product.unity.name
      } 
    %> 
  </td>

    
    <!-- Cantidad entregada -->
    <td>
      <%= f.input :delivery_quantity, label: false, placeholder: 'Cant', required: false,
        input_html: {
          "data-tooltip"=>true,
          :class=>"has-tip deliver-quantity input-sm",
          :title=>"Cantidad entregada",
          "data-placement"=>"right",
          min: '0', step:'any', :style => 'width: 100px',
          value: f.object.delivery_quantity.present? ? f.object.delivery_quantity : @original_product.request_quantity
        } 
      %>

      <% if f.object.errors[:out_of_stock].any? %>
        <div class="invalid-feedback d-block">
          <%= f.object.errors[:out_of_stock].first %>
        </div>
      <% end %>
    </td>
    
    <!-- Lotes -->
    
    <td>
        
      <div class="lot-stocks-hidden">
        <% lot_stock_error = '' %>      
        <% if f.object.order_prod_lot_stocks.present?  %>
          <%= f.simple_fields_for :order_prod_lot_stocks do |iopls| %>
            <%= render "shared/orders/order_product_lot_stocks_fields", f: iopls %>      
            <% lot_stock_error = iopls.object.errors[:quantity].first %>      
          <% end %>
        <% end %>
      </div>

      <%
        # template input hidden lot selection
        new_iopls = f.object.order_prod_lot_stocks.build
        fields = f.fields_for(:order_prod_lot_stocks, 
        new_iopls, 
        :child_index => "id_placeholder") do |fb|
          render "shared/orders/order_product_lot_stocks_fields", f: fb
        end
      %>

      <div class="btn-progress">
        <div class="bg-progress bg-info"></div>
        <%= button_tag type: "button", 
          class: "btn  select-lot-btn text-nowrap w-100 is-invalid",
          "data-select-lot-url" => find_order_product_lots_chronic_prescriptions_path(f.object.id),
          "data-template-fill-hidden" => fields do %>
          <% if f.object.lot_stocks.present? %>
            Seleccionados <%= f.object.lot_stocks.count %> 
          <% else %>
            <%= fa_icon "barcode" %> Seleccionar lote
          <% end %>
        <% end %>
      </div>

      <div class="invalid-feedback d-block">
        <% if f.object.errors[:quantity_lot_stock_sum].any? %>
          <%= f.object.errors[:quantity_lot_stock_sum].first %>
        <% elsif lot_stock_error.present? %>
          Revisar las cantidades seleccionadas
        <% elsif f.object.errors[:int_ord_prod_lot_stocks].any? %>
          <%= f.object.errors[:int_ord_prod_lot_stocks].first %>
        <% end %>
      </div>
    </td>

    <!-- Observaciones proveedor -->
    <td>
      <%= f.input :observation, label: false, as: :text,
        :input_html => { class: 'input-sm', :cols => 20  , :rows => 1 } %>
    </td>


  <td>
    <!-- Botón quitar -->
    <%= link_to_remove_association  f, class: 'remove-tag btn btn-sm btn-warning',
      title: 'Quitar', data: { toggle: 'tooltip', placement: 'top' } do %>
        <%= fa_icon "minus" %>
    <% end %>
  </td>
</tr>
