"use strict";!function(t){"object"==typeof module&&module.exports?module.exports=t:t(Highcharts)}(function(t){var a,I,d,p,u,m,e,i;I=(a=t).pick,d=a.each,p=a.grep,u=a.arrayMin,m=a.arrayMax,e=a.seriesType,i=a.seriesTypes.pie.prototype,e("variablepie","pie",{minPointSize:"10%",maxPointSize:"100%",zMin:undefined,zMax:undefined,sizeBy:"area",tooltip:{pointFormat:'<span style="color:{point.color}">\u25cf</span> {series.name}<br/>Value: {point.y}<br/>Size: {point.z}<br/>'}},{pointArrayMap:["y","z"],parallelArrays:["x","y","z"],redraw:function(){this.center=null,i.redraw.call(this,arguments)},zValEval:function(t){return"number"==typeof t&&!isNaN(t)||null},calculateExtremes:function(){var t,a,e=this,i=e.chart,n=i.plotWidth,s=i.plotHeight,r=e.options,l=2*(r.slicedOffset||0),o=e.zData,h=Math.min(n,s)-l,c={},M=e.center||e.getCenter();d(["minPointSize","maxPointSize"],function(t){var a=r[t],e=/%$/.test(a);a=parseInt(a,10),c[t]=e?h*a/100:2*a}),e.minPxSize=M[3]+c.minPointSize,e.maxPxSize=Math.max(Math.min(M[2],c.maxPointSize),M[3]+c.minPointSize),o.length&&(t=I(r.zMin,u(p(o,e.zValEval))),a=I(r.zMax,m(p(o,e.zValEval))),this.getRadii(t,a,e.minPxSize,e.maxPxSize))},getRadii:function(t,a,e,i){for(var n,s,r,l=0,o=this.zData,h=o.length,c=[],M="radius"!==this.options.sizeBy,d=a-t;l<h;l++)(s=this.zValEval(o[l])?o[l]:t)<=t?r=e/2:a<=s?r=i/2:(n=0<d?(s-t)/d:.5,M&&(n=Math.sqrt(n)),r=Math.ceil(e+n*(i-e))/2),c.push(r);this.radii=c},translate:function(n){this.generatePoints();var t,a,e,s,i,r,l,o,h,c,M,d=this,p=0,u=1e3,m=d.options,z=m.slicedOffset,x=z+(m.borderWidth||0),P=m.startAngle||0,b=Math.PI/180*(P-90),f=Math.PI/180*(I(m.endAngle,P+360)-90),g=f-b,y=d.points,v=m.dataLabels.distance,D=m.ignoreHiddenPoint,S=y.length;for(d.startAngleRad=b,d.endAngleRad=f,d.calculateExtremes(),n||(d.center=n=d.getCenter()),d.getX=function(t,a,e){var i=e.series.radii[e.index];return s=Math.asin(Math.min((t-n[1])/(i+e.labelDistance),1)),n[0]+(a?-1:1)*(Math.cos(s)*(i+e.labelDistance))},l=0;l<S;l++)o=y[l],h=d.radii[l],o.labelDistance=I(o.options.dataLabels&&o.options.dataLabels.distance,v),d.maxLabelDistance=Math.max(d.maxLabelDistance||0,o.labelDistance),a=b+p*g,D&&!o.visible||(p+=o.percentage/100),e=b+p*g,o.shapeType="arc",o.shapeArgs={x:n[0],y:n[1],r:h,innerR:n[3]/2,start:Math.round(a*u)/u,end:Math.round(e*u)/u},(s=(e+a)/2)>1.5*Math.PI?s-=2*Math.PI:s<-Math.PI/2&&(s+=2*Math.PI),o.slicedTranslation={translateX:Math.round(Math.cos(s)*z),translateY:Math.round(Math.sin(s)*z)},i=Math.cos(s)*n[2]/2,r=Math.sin(s)*n[2]/2,c=Math.cos(s)*h,M=Math.sin(s)*h,o.tooltipPos=[n[0]+.7*i,n[1]+.7*r],o.half=s<-Math.PI/2||s>Math.PI/2?1:0,o.angle=s,t=Math.min(x,o.labelDistance/5),o.labelPos=[n[0]+c+Math.cos(s)*o.labelDistance,n[1]+M+Math.sin(s)*o.labelDistance,n[0]+c+Math.cos(s)*t,n[1]+M+Math.sin(s)*t,n[0]+c,n[1]+M,o.labelDistance<0?"center":o.half?"right":"left",s]}})});